apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: k8s-pipeline
  namespace: k8s-namespace
spec:
  description: | 
    This pipeline clones a git repo, builds a Docker image with Kaniko and
    pushes it to a registry
  params:
  - name: repo-url
    type: string
  - name: revision
    type: string
  - name: submodules
    type: string
  - name: server
    type: string
  - name: subject
    type: string
  - name: body
    type: string
  - name: sender
    type: string
  - name: recipients
    type: string
 
 
  
  workspaces:
  - name: shared-data
  - name: ssh-creds

  tasks:
  - name: fetch-source
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    - name: ssh-directory
      workspace: ssh-creds
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.revision)
    - name: submodules
      value: $(params.submodules)  
  - name: send-mail
    runAfter: ["fetch-source"]
    taskRef:
      name: send-mail
    params:
    - name: server
      value: $(params.server)
    - name: subject
      value: $(params.subject)
    - name: body
      value: $(params.body)
    - name: sender
      value: $(params.sender)
    - name: recipients
      value: $(params.recipients)

---

apiVersion: tekton.dev/v1beta1
kind: Task
metadata:
  name: send-mail
  labels:
    app.kubernetes.io/version: "0.1"
  annotations:
    tekton.dev/pipelines.minVersion: "0.12.1"
    tekton.dev/categories: Messaging
    tekton.dev/tags: mail
    tekton.dev/displayName: "send mail"
    tekton.dev/platforms: "linux/amd64,linux/s390x,linux/ppc64le,linux/arm64"
spec:
  description: >-
    This task sends a simple email to receivers via SMTP server

  params:
  - name: server
    type: string
    description: secret name for SMTP server information (url, port, password)
  - name: subject
    type: string
    description: plain text email subject
  - name: body
    type: string
    description: plain text email body
  - name: sender
    type: string
    description: sender email address
  - name: recipients
    type: string
    description: recipient email addresses (space delimited list)
  steps:
  - name: send
    image: docker.io/library/python:3.8-alpine@sha256:e11bbd37d4371894e954421b85dbe8dd4eb7198d7cb4ed144ab529f19f57c3f1 #tag: 3.8-alpine
    script: |
      #!/usr/bin/env python3
      import smtplib, ssl, os
      port = os.getenv('PORT')
      smtp_server = os.getenv('SERVER')
      sender_email = "$(params.sender)"
      receiver_emails = "$(params.recipients)"
      user = os.getenv('USER')
      password = os.getenv('PASSWORD')
      tls = os.getenv('TLS')
      message = f"""\
      Subject: $(params.subject)
      To: {receiver_emails}
      From: {sender_email}

      $(params.body)"""
      print(message)
      if tls == 'True':
          context = ssl.create_default_context()
          server = smtplib.SMTP_SSL(smtp_server, port, context=context)
      else:
          server = smtplib.SMTP(smtp_server, port)
      if password != '':
          server.login(user, password)
      for receiver in [item for item in receiver_emails.split(' ') if item]:
          server.sendmail(sender_email, receiver, message.encode('utf-8'))
      server.quit()
    env:
    - name: USER
      value: harikasree2225@gmail.com
    - name: PASSWORD
      value: ychb qvzb djtj pamq
    - name: TLS
      value: "false"
    - name: SERVER
      value: smtp.gmail.com
    - name: PORT
      value: 25
    

  
      

  
 

 












      
 
   
 