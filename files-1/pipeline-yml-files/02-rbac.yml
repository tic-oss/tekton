apiVersion: v1
kind: ServiceAccount
metadata:
  name: nandini-pipeline-service-account
  namespace: tekton-namespace
secrets:
  - name: docker-credentials
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-nandini-pipeline-role
  namespace: tekton-namespace
rules:
# EventListeners need to be able to fetch all namespaced resources
- apiGroups: ["triggers.tekton.dev"]
  resources: ["eventlisteners", "triggerbindings", "triggertemplates", "triggers", "interceptors"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
# configmaps is needed for updating logging config
  resources: ["configmaps"]
  verbs: ["get", "list", "watch"]
# Permissions to create resources in associated TriggerTemplates
- apiGroups: ["tekton.dev"]
  resources: ["pipelineruns", "pipelineresources", "taskruns"]
  verbs: ["create"]
- apiGroups: [""]
  resources: ["serviceaccounts"]
  verbs: ["impersonate"]
- apiGroups: ["policy"]
  resources: ["podsecuritypolicies"]
  resourceNames: ["tekton-triggers"]
  verbs: ["use"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-nandini-pipeline-binding
  namespace: tekton-namespace
subjects:
- kind: ServiceAccount
  name: nandini-pipeline-service-account
  namespace: tekton-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-nandini-pipeline-role
---
kind: ClusterRole
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: tekton-nandini-pipeline-clusterrole
  namespace: tekton-namespace
rules:
  # EventListeners need to be able to fetch any clustertriggerbindings
- apiGroups: ["triggers.tekton.dev"]
  resources: ["clustertriggerbindings", "clusterinterceptors", "interceptors"]
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-nandini-pipeline-clusterbinding
  namespace: tekton-namespace
subjects:
- kind: ServiceAccount
  name: nandini-pipeline-service-account
  namespace: tekton-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-nandini-pipeline-clusterrole
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: tekton-nandini-pipeline-kubectl-role
  namespace: tekton-namespace
rules:
- apiGroups:
  - "*"
  resources:
  - pods
  - deployments
  - deployments/scale
  - deployments/status
  verbs:
  - get
  - list
  - watch
  - create
  - delete
  - patch
  - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-nandini-pipeline-kubectl-binding
  namespace: tekton-namespace
subjects:
- kind: ServiceAccount
  name: nandini-pipeline-service-account
  namespace: tekton-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: tekton-nandini-pipeline-kubectl-role

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: tekton-namespace
  name: tekton-nandini-pipeline-ssh-role
rules:
- apiGroups: [""]
  resources: ["secrets"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: tekton-nandini-pipeline-ssh-binding
  namespace: tekton-namespace
subjects:
- kind: ServiceAccount
  name: nandini-pipeline-service-account
  namespace: tekton-namespace
roleRef:
  kind: Role
  name: tekton-nandini-pipeline-ssh-role
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-nandini-pipeline-git-access
  namespace: tekton-namespace
rules:
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["create", "get", "list", "delete"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-nandini-pipeline-git-access-binding
  namespace: tekton-namespace
subjects:
- kind: ServiceAccount
  name: nandini-pipeline-service-account
  namespace: tekton-namespace
roleRef:
  kind: ClusterRole
  name: tekton-nandini-pipeline-git-access
  apiGroup: rbac.authorization.k8s.io

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: tekton-nandini-pipeline-workspace-access-role
  namespace: tekton-namespace
rules:
- apiGroups: [""]
  resources: ["pods/exec", "pods/log"]
  verbs: ["create", "get", "list", "watch", "update", "delete"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "exec"]
- apiGroups: ["tekton.dev"]
  resources: ["pipelineruns", "tasks", "taskruns"]
  verbs: ["get", "list", "watch"]

---

apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: tekton-nandini-pipeline-workspace-access-binding
  namespace: tekton-namespace
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: tekton-nandini-pipeline-workspace-access-role
subjects:
- kind: ServiceAccount
  name: ticgo-pipeline-service-account
  namespace: tekton-namespace
